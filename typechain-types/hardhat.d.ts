/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "BehaviorGraph",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BehaviorGraph__factory>;
    getContractFactory(
      name: "BehaviorGraphToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BehaviorGraphToken__factory>;
    getContractFactory(
      name: "IBehaviorGraph",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBehaviorGraph__factory>;
    getContractFactory(
      name: "IFunctionNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFunctionNode__factory>;
    getContractFactory(
      name: "ITriggerNode",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITriggerNode__factory>;
    getContractFactory(
      name: "Add",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Add__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "ExternalInvoke",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExternalInvoke__factory>;
    getContractFactory(
      name: "Gate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Gate__factory>;
    getContractFactory(
      name: "SocketsIndexedByName",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocketsIndexedByName__factory>;
    getContractFactory(
      name: "VariableSet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VariableSet__factory>;
    getContractFactory(
      name: "HasVariables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HasVariables__factory>;
    getContractFactory(
      name: "NodeState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NodeState__factory>;
    getContractFactory(
      name: "Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "BehaviorGraph",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BehaviorGraph>;
    getContractAt(
      name: "BehaviorGraphToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BehaviorGraphToken>;
    getContractAt(
      name: "IBehaviorGraph",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBehaviorGraph>;
    getContractAt(
      name: "IFunctionNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFunctionNode>;
    getContractAt(
      name: "ITriggerNode",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITriggerNode>;
    getContractAt(
      name: "Add",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Add>;
    getContractAt(
      name: "Counter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "ExternalInvoke",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExternalInvoke>;
    getContractAt(
      name: "Gate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Gate>;
    getContractAt(
      name: "SocketsIndexedByName",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SocketsIndexedByName>;
    getContractAt(
      name: "VariableSet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VariableSet>;
    getContractAt(
      name: "HasVariables",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HasVariables>;
    getContractAt(
      name: "NodeState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NodeState>;
    getContractAt(
      name: "Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
