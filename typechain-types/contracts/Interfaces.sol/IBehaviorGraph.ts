/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export type GraphUpdateStruct = {
  updateType: PromiseOrValue<BigNumberish>;
  variableId: PromiseOrValue<BigNumberish>;
  intValue: PromiseOrValue<BigNumberish>;
  boolValue: PromiseOrValue<boolean>;
};

export type GraphUpdateStructOutput = [number, number, BigNumber, boolean] & {
  updateType: number;
  variableId: number;
  intValue: BigNumber;
  boolValue: boolean;
};

export interface IBehaviorGraphInterface extends utils.Interface {
  functions: {
    "getBoolInputVal(uint16,uint8)": FunctionFragment;
    "getInputValueType(uint16)": FunctionFragment;
    "getIntInputVal(uint16,uint8)": FunctionFragment;
    "getNodeStateVal(uint16,string)": FunctionFragment;
    "getStringInputVal(uint16,uint8)": FunctionFragment;
    "setNodeIntStateVal(uint16,string,int256)": FunctionFragment;
    "triggerEdge(uint16,uint8)": FunctionFragment;
    "writeToOutput(uint16,uint8,int256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getBoolInputVal"
      | "getInputValueType"
      | "getIntInputVal"
      | "getNodeStateVal"
      | "getStringInputVal"
      | "setNodeIntStateVal"
      | "triggerEdge"
      | "writeToOutput"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getBoolInputVal",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getInputValueType",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getIntInputVal",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getNodeStateVal",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getStringInputVal",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setNodeIntStateVal",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "triggerEdge",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "writeToOutput",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "getBoolInputVal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInputValueType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIntInputVal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNodeStateVal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStringInputVal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setNodeIntStateVal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "triggerEdge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "writeToOutput",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IBehaviorGraph extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IBehaviorGraphInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getBoolInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getInputValueType(
      _nodeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getIntInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getNodeStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getStringInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    setNodeIntStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    triggerEdge(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    writeToOutput(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketId: PromiseOrValue<BigNumberish>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getBoolInputVal(
    _nodeId: PromiseOrValue<BigNumberish>,
    _socketName: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getInputValueType(
    _nodeId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  getIntInputVal(
    _nodeId: PromiseOrValue<BigNumberish>,
    _socketName: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getNodeStateVal(
    _nodeId: PromiseOrValue<BigNumberish>,
    _stateVar: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getStringInputVal(
    _nodeId: PromiseOrValue<BigNumberish>,
    _socketName: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  setNodeIntStateVal(
    _nodeId: PromiseOrValue<BigNumberish>,
    _stateVar: PromiseOrValue<string>,
    val: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  triggerEdge(
    _nodeId: PromiseOrValue<BigNumberish>,
    _socketIndex: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  writeToOutput(
    _nodeId: PromiseOrValue<BigNumberish>,
    _socketId: PromiseOrValue<BigNumberish>,
    val: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getBoolInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getInputValueType(
      _nodeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    getIntInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNodeStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStringInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    setNodeIntStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    triggerEdge(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GraphUpdateStructOutput[]>;

    writeToOutput(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketId: PromiseOrValue<BigNumberish>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getBoolInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getInputValueType(
      _nodeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIntInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getNodeStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStringInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setNodeIntStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    triggerEdge(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    writeToOutput(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketId: PromiseOrValue<BigNumberish>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getBoolInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getInputValueType(
      _nodeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIntInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNodeStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStringInputVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketName: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setNodeIntStateVal(
      _nodeId: PromiseOrValue<BigNumberish>,
      _stateVar: PromiseOrValue<string>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    triggerEdge(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketIndex: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    writeToOutput(
      _nodeId: PromiseOrValue<BigNumberish>,
      _socketId: PromiseOrValue<BigNumberish>,
      val: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
