/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { BaseContract, BigNumber, Signer, utils } from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface HasVariablesInterface extends utils.Interface {
  functions: {};

  events: {
    "BoolVariableUpdated(address,uint8,bool)": EventFragment;
    "IntVariableUpdated(address,uint8,int256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BoolVariableUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "IntVariableUpdated"): EventFragment;
}

export interface BoolVariableUpdatedEventObject {
  executor: string;
  _variableId: number;
  value: boolean;
}
export type BoolVariableUpdatedEvent = TypedEvent<
  [string, number, boolean],
  BoolVariableUpdatedEventObject
>;

export type BoolVariableUpdatedEventFilter =
  TypedEventFilter<BoolVariableUpdatedEvent>;

export interface IntVariableUpdatedEventObject {
  executor: string;
  _variableId: number;
  value: BigNumber;
}
export type IntVariableUpdatedEvent = TypedEvent<
  [string, number, BigNumber],
  IntVariableUpdatedEventObject
>;

export type IntVariableUpdatedEventFilter =
  TypedEventFilter<IntVariableUpdatedEvent>;

export interface HasVariables extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: HasVariablesInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "BoolVariableUpdated(address,uint8,bool)"(
      executor?: null,
      _variableId?: null,
      value?: null
    ): BoolVariableUpdatedEventFilter;
    BoolVariableUpdated(
      executor?: null,
      _variableId?: null,
      value?: null
    ): BoolVariableUpdatedEventFilter;

    "IntVariableUpdated(address,uint8,int256)"(
      executor?: null,
      _variableId?: null,
      value?: null
    ): IntVariableUpdatedEventFilter;
    IntVariableUpdated(
      executor?: null,
      _variableId?: null,
      value?: null
    ): IntVariableUpdatedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
