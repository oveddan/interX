/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SocketsIndexedByName,
  SocketsIndexedByNameInterface,
} from "../../../contracts/Nodes.sol/SocketsIndexedByName";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getSocketIndecesByNodeType",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint8",
                name: "outputFlowSocket",
                type: "uint8",
              },
            ],
            internalType: "struct ExternalInvokeIndeces",
            name: "externalInvoke",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "inputFlow",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "outputCount",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "outputFlow",
                type: "uint8",
              },
            ],
            internalType: "struct CounterSocketIndeces",
            name: "counter",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "input1",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "input2",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "result",
                type: "uint8",
              },
            ],
            internalType: "struct Int2Out1SocketIndeces",
            name: "add",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "inputFlow",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "inputVal",
                type: "uint8",
              },
            ],
            internalType: "struct VariableSetIndeces",
            name: "variableSet",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "inputFlow",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "outputGateTrue",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "outputGateFalse",
                type: "uint8",
              },
            ],
            internalType: "struct GateSocketIndeces",
            name: "gate",
            type: "tuple",
          },
        ],
        internalType: "struct SocketIndecesByNodeType",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060a001604052806040518060200160405280600060ff1681525081526020016040518060600160405280600060ff168152602001600160ff168152602001600260ff1681525081526020016040518060600160405280600060ff168152602001600160ff168152602001600260ff1681525081526020016040518060400160405280600060ff168152602001600160ff1681525081526020016040518060600160405280600060ff168152602001600160ff168152602001600260ff168152508152506000808201518160000160008201518160000160006101000a81548160ff021916908360ff160217905550505060208201518160010160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff16021790555060408201518160000160026101000a81548160ff021916908360ff160217905550505060408201518160020160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff16021790555060408201518160000160026101000a81548160ff021916908360ff160217905550505060608201518160030160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff160217905550505060808201518160040160008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff16021790555060408201518160000160026101000a81548160ff021916908360ff1602179055505050905050610512806102ae6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80637745754b14610030575b600080fd5b61003861004e565b60405161004591906104c0565b60405180910390f35b610056610228565b60006040518060a0016040529081600082016040518060200160405290816000820160009054906101000a900460ff1660ff1660ff16815250508152602001600182016040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900460ff1660ff1660ff1681526020016000820160029054906101000a900460ff1660ff1660ff16815250508152602001600282016040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900460ff1660ff1660ff1681526020016000820160029054906101000a900460ff1660ff1660ff16815250508152602001600382016040518060400160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900460ff1660ff1660ff16815250508152602001600482016040518060600160405290816000820160009054906101000a900460ff1660ff1660ff1681526020016000820160019054906101000a900460ff1660ff1660ff1681526020016000820160029054906101000a900460ff1660ff1660ff168152505081525050905090565b6040518060a0016040528061023b610275565b815260200161024861028b565b81526020016102556102b5565b81526020016102626102df565b815260200161026f6102ff565b81525090565b6040518060200160405280600060ff1681525090565b6040518060600160405280600060ff168152602001600060ff168152602001600060ff1681525090565b6040518060600160405280600060ff168152602001600060ff168152602001600060ff1681525090565b6040518060400160405280600060ff168152602001600060ff1681525090565b6040518060600160405280600060ff168152602001600060ff168152602001600060ff1681525090565b600060ff82169050919050565b61033f81610329565b82525050565b60208201600082015161035b6000850182610336565b50505050565b6060820160008201516103776000850182610336565b50602082015161038a6020850182610336565b50604082015161039d6040850182610336565b50505050565b6060820160008201516103b96000850182610336565b5060208201516103cc6020850182610336565b5060408201516103df6040850182610336565b50505050565b6040820160008201516103fb6000850182610336565b50602082015161040e6020850182610336565b50505050565b60608201600082015161042a6000850182610336565b50602082015161043d6020850182610336565b5060408201516104506040850182610336565b50505050565b6101808201600082015161046d6000850182610345565b5060208201516104806020850182610361565b50604082015161049360808501826103a3565b5060608201516104a660e08501826103e5565b5060808201516104ba610120850182610414565b50505050565b6000610180820190506104d66000830184610456565b9291505056fea2646970667358221220dcdba264f91ff0cb26fb842c91eda4f75eae6f3a156d3e152f2f93c41635dedd64736f6c63430008090033";

type SocketsIndexedByNameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SocketsIndexedByNameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SocketsIndexedByName__factory extends ContractFactory {
  constructor(...args: SocketsIndexedByNameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SocketsIndexedByName> {
    return super.deploy(overrides || {}) as Promise<SocketsIndexedByName>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SocketsIndexedByName {
    return super.attach(address) as SocketsIndexedByName;
  }
  override connect(signer: Signer): SocketsIndexedByName__factory {
    return super.connect(signer) as SocketsIndexedByName__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SocketsIndexedByNameInterface {
    return new utils.Interface(_abi) as SocketsIndexedByNameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SocketsIndexedByName {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SocketsIndexedByName;
  }
}
