/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Token, TokenInterface } from "../../contracts/Token";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b0000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620001a6565b508060019080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b612c7380620002cb6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102a4578063b88d4fde146102c0578063c87b56dd146102dc578063e985e9c51461030c578063f2fde38b1461033c5761010b565b806370a082311461022e578063715018a61461025e5780638da5cb5b1461026857806395d89b41146102865761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e2578063695850fb146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611b58565b610358565b6040516101379190611ba0565b60405180910390f35b61014861043a565b6040516101559190611c54565b60405180910390f35b61017860048036038101906101739190611cac565b6104cc565b6040516101859190611d1a565b60405180910390f35b6101a860048036038101906101a39190611d61565b610512565b005b6101c460048036038101906101bf9190611da1565b61062a565b005b6101e060048036038101906101db9190611da1565b61068a565b005b6101fc60048036038101906101f79190611cac565b6106aa565b6040516102099190611d1a565b60405180910390f35b61022c60048036038101906102279190611f29565b61075c565b005b61024860048036038101906102439190611f72565b610792565b6040516102559190611fae565b60405180910390f35b61026661084a565b005b61027061085e565b60405161027d9190611d1a565b60405180910390f35b61028e610888565b60405161029b9190611c54565b60405180910390f35b6102be60048036038101906102b99190611ff5565b61091a565b005b6102da60048036038101906102d591906120d6565b610930565b005b6102f660048036038101906102f19190611cac565b610992565b6040516103039190611c54565b60405180910390f35b61032660048036038101906103219190612159565b6109a4565b6040516103339190611ba0565b60405180910390f35b61035660048036038101906103519190611f72565b610a38565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042357507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610433575061043282610abc565b5b9050919050565b606060008054610449906121c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610475906121c8565b80156104c25780601f10610497576101008083540402835291602001916104c2565b820191906000526020600020905b8154815290600101906020018083116104a557829003601f168201915b5050505050905090565b60006104d782610b26565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061051d826106aa565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561058e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105859061226c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105ad610b71565b73ffffffffffffffffffffffffffffffffffffffff1614806105dc57506105db816105d6610b71565b6109a4565b5b61061b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610612906122fe565b60405180910390fd5b6106258383610b79565b505050565b61063b610635610b71565b82610c32565b61067a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067190612390565b60405180910390fd5b610685838383610cc7565b505050565b6106a583838360405180602001604052806000815250610930565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a906123fc565b60405180910390fd5b80915050919050565b6000339050600061076d6008610f2e565b90506107796008610f3c565b6107838282610f52565b61078d8184610f70565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fa9061248e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610852610fe4565b61085c6000611062565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610897906121c8565b80601f01602080910402602001604051908101604052809291908181526020018280546108c3906121c8565b80156109105780601f106108e557610100808354040283529160200191610910565b820191906000526020600020905b8154815290600101906020018083116108f357829003601f168201915b5050505050905090565b61092c610925610b71565b8383611128565b5050565b61094161093b610b71565b83610c32565b610980576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097790612390565b60405180910390fd5b61098c84848484611295565b50505050565b606061099d826112f1565b9050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a40610fe4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790612520565b60405180910390fd5b610ab981611062565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b2f81611404565b610b6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b65906123fc565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610bec836106aa565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c3e836106aa565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c805750610c7f81856109a4565b5b80610cbe57508373ffffffffffffffffffffffffffffffffffffffff16610ca6846104cc565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ce7826106aa565b73ffffffffffffffffffffffffffffffffffffffff1614610d3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d34906125b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da490612644565b60405180910390fd5b610db8838383611470565b610dc3600082610b79565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e139190612693565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e6a91906126c7565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610f29838383611475565b505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b610f6c82826040518060200160405280600081525061147a565b5050565b610f7982611404565b610fb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faf9061278f565b60405180910390fd5b80600660008481526020019081526020016000209080519060200190610fdf929190611a49565b505050565b610fec610b71565b73ffffffffffffffffffffffffffffffffffffffff1661100a61085e565b73ffffffffffffffffffffffffffffffffffffffff1614611060576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611057906127fb565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611197576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118e90612867565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112889190611ba0565b60405180910390a3505050565b6112a0848484610cc7565b6112ac848484846114d5565b6112eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e2906128f9565b60405180910390fd5b50505050565b60606112fc82610b26565b600060066000848152602001908152602001600020805461131c906121c8565b80601f0160208091040260200160405190810160405280929190818152602001828054611348906121c8565b80156113955780601f1061136a57610100808354040283529160200191611395565b820191906000526020600020905b81548152906001019060200180831161137857829003601f168201915b5050505050905060006113a661166c565b90506000815114156113bc5781925050506113ff565b6000825111156113f15780826040516020016113d9929190612955565b604051602081830303815290604052925050506113ff565b6113fa84611683565b925050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b61148483836116eb565b61149160008484846114d5565b6114d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c7906128f9565b60405180910390fd5b505050565b60006114f68473ffffffffffffffffffffffffffffffffffffffff166118c5565b1561165f578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261151f610b71565b8786866040518563ffffffff1660e01b815260040161154194939291906129ce565b602060405180830381600087803b15801561155b57600080fd5b505af192505050801561158c57506040513d601f19601f820116820180604052508101906115899190612a2f565b60015b61160f573d80600081146115bc576040519150601f19603f3d011682016040523d82523d6000602084013e6115c1565b606091505b50600081511415611607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115fe906128f9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611664565b600190505b949350505050565b606060405180602001604052806000815250905090565b606061168e82610b26565b600061169861166c565b905060008151116116b857604051806020016040528060008152506116e3565b806116c2846118e8565b6040516020016116d3929190612955565b6040516020818303038152906040525b915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561175b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161175290612aa8565b60405180910390fd5b61176481611404565b156117a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179b90612b14565b60405180910390fd5b6117b060008383611470565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461180091906126c7565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46118c160008383611475565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60606000821415611930576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611a44565b600082905060005b6000821461196257808061194b90612b34565b915050600a8261195b9190612bac565b9150611938565b60008167ffffffffffffffff81111561197e5761197d611dfe565b5b6040519080825280601f01601f1916602001820160405280156119b05781602001600182028036833780820191505090505b5090505b60008514611a3d576001826119c99190612693565b9150600a856119d89190612bdd565b60306119e491906126c7565b60f81b8183815181106119fa576119f9612c0e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611a369190612bac565b94506119b4565b8093505050505b919050565b828054611a55906121c8565b90600052602060002090601f016020900481019282611a775760008555611abe565b82601f10611a9057805160ff1916838001178555611abe565b82800160010185558215611abe579182015b82811115611abd578251825591602001919060010190611aa2565b5b509050611acb9190611acf565b5090565b5b80821115611ae8576000816000905550600101611ad0565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b3581611b00565b8114611b4057600080fd5b50565b600081359050611b5281611b2c565b92915050565b600060208284031215611b6e57611b6d611af6565b5b6000611b7c84828501611b43565b91505092915050565b60008115159050919050565b611b9a81611b85565b82525050565b6000602082019050611bb56000830184611b91565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bf5578082015181840152602081019050611bda565b83811115611c04576000848401525b50505050565b6000601f19601f8301169050919050565b6000611c2682611bbb565b611c308185611bc6565b9350611c40818560208601611bd7565b611c4981611c0a565b840191505092915050565b60006020820190508181036000830152611c6e8184611c1b565b905092915050565b6000819050919050565b611c8981611c76565b8114611c9457600080fd5b50565b600081359050611ca681611c80565b92915050565b600060208284031215611cc257611cc1611af6565b5b6000611cd084828501611c97565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d0482611cd9565b9050919050565b611d1481611cf9565b82525050565b6000602082019050611d2f6000830184611d0b565b92915050565b611d3e81611cf9565b8114611d4957600080fd5b50565b600081359050611d5b81611d35565b92915050565b60008060408385031215611d7857611d77611af6565b5b6000611d8685828601611d4c565b9250506020611d9785828601611c97565b9150509250929050565b600080600060608486031215611dba57611db9611af6565b5b6000611dc886828701611d4c565b9350506020611dd986828701611d4c565b9250506040611dea86828701611c97565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e3682611c0a565b810181811067ffffffffffffffff82111715611e5557611e54611dfe565b5b80604052505050565b6000611e68611aec565b9050611e748282611e2d565b919050565b600067ffffffffffffffff821115611e9457611e93611dfe565b5b611e9d82611c0a565b9050602081019050919050565b82818337600083830152505050565b6000611ecc611ec784611e79565b611e5e565b905082815260208101848484011115611ee857611ee7611df9565b5b611ef3848285611eaa565b509392505050565b600082601f830112611f1057611f0f611df4565b5b8135611f20848260208601611eb9565b91505092915050565b600060208284031215611f3f57611f3e611af6565b5b600082013567ffffffffffffffff811115611f5d57611f5c611afb565b5b611f6984828501611efb565b91505092915050565b600060208284031215611f8857611f87611af6565b5b6000611f9684828501611d4c565b91505092915050565b611fa881611c76565b82525050565b6000602082019050611fc36000830184611f9f565b92915050565b611fd281611b85565b8114611fdd57600080fd5b50565b600081359050611fef81611fc9565b92915050565b6000806040838503121561200c5761200b611af6565b5b600061201a85828601611d4c565b925050602061202b85828601611fe0565b9150509250929050565b600067ffffffffffffffff8211156120505761204f611dfe565b5b61205982611c0a565b9050602081019050919050565b600061207961207484612035565b611e5e565b90508281526020810184848401111561209557612094611df9565b5b6120a0848285611eaa565b509392505050565b600082601f8301126120bd576120bc611df4565b5b81356120cd848260208601612066565b91505092915050565b600080600080608085870312156120f0576120ef611af6565b5b60006120fe87828801611d4c565b945050602061210f87828801611d4c565b935050604061212087828801611c97565b925050606085013567ffffffffffffffff81111561214157612140611afb565b5b61214d878288016120a8565b91505092959194509250565b600080604083850312156121705761216f611af6565b5b600061217e85828601611d4c565b925050602061218f85828601611d4c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806121e057607f821691505b602082108114156121f4576121f3612199565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612256602183611bc6565b9150612261826121fa565b604082019050919050565b6000602082019050818103600083015261228581612249565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b60006122e8603e83611bc6565b91506122f38261228c565b604082019050919050565b60006020820190508181036000830152612317816122db565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b600061237a602e83611bc6565b91506123858261231e565b604082019050919050565b600060208201905081810360008301526123a98161236d565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006123e6601883611bc6565b91506123f1826123b0565b602082019050919050565b60006020820190508181036000830152612415816123d9565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612478602983611bc6565b91506124838261241c565b604082019050919050565b600060208201905081810360008301526124a78161246b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061250a602683611bc6565b9150612515826124ae565b604082019050919050565b60006020820190508181036000830152612539816124fd565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061259c602583611bc6565b91506125a782612540565b604082019050919050565b600060208201905081810360008301526125cb8161258f565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061262e602483611bc6565b9150612639826125d2565b604082019050919050565b6000602082019050818103600083015261265d81612621565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061269e82611c76565b91506126a983611c76565b9250828210156126bc576126bb612664565b5b828203905092915050565b60006126d282611c76565b91506126dd83611c76565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561271257612711612664565b5b828201905092915050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612779602e83611bc6565b91506127848261271d565b604082019050919050565b600060208201905081810360008301526127a88161276c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006127e5602083611bc6565b91506127f0826127af565b602082019050919050565b60006020820190508181036000830152612814816127d8565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612851601983611bc6565b915061285c8261281b565b602082019050919050565b6000602082019050818103600083015261288081612844565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006128e3603283611bc6565b91506128ee82612887565b604082019050919050565b60006020820190508181036000830152612912816128d6565b9050919050565b600081905092915050565b600061292f82611bbb565b6129398185612919565b9350612949818560208601611bd7565b80840191505092915050565b60006129618285612924565b915061296d8284612924565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006129a082612979565b6129aa8185612984565b93506129ba818560208601611bd7565b6129c381611c0a565b840191505092915050565b60006080820190506129e36000830187611d0b565b6129f06020830186611d0b565b6129fd6040830185611f9f565b8181036060830152612a0f8184612995565b905095945050505050565b600081519050612a2981611b2c565b92915050565b600060208284031215612a4557612a44611af6565b5b6000612a5384828501612a1a565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612a92602083611bc6565b9150612a9d82612a5c565b602082019050919050565b60006020820190508181036000830152612ac181612a85565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612afe601c83611bc6565b9150612b0982612ac8565b602082019050919050565b60006020820190508181036000830152612b2d81612af1565b9050919050565b6000612b3f82611c76565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b7257612b71612664565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612bb782611c76565b9150612bc283611c76565b925082612bd257612bd1612b7d565b5b828204905092915050565b6000612be882611c76565b9150612bf383611c76565b925082612c0357612c02612b7d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220167ae91f4aec87e63848c61dbca04549482d13694bea12bc1e05a25c6251719a64736f6c63430008090033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Token> {
    return super.deploy(overrides || {}) as Promise<Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Token {
    return super.attach(address) as Token;
  }
  override connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
