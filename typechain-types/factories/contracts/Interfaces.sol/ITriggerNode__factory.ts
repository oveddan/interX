/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITriggerNode,
  ITriggerNodeInterface,
} from "../../../contracts/Interfaces.sol/ITriggerNode";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBehaviorGraph",
        name: "_behaviorGraph",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_triggeringSocketIndex",
        type: "uint8",
      },
    ],
    name: "trigger",
    outputs: [
      {
        components: [
          {
            internalType: "enum UpdateType",
            name: "updateType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "variableId",
            type: "uint8",
          },
          {
            internalType: "int256",
            name: "intValue",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "boolValue",
            type: "bool",
          },
        ],
        internalType: "struct GraphUpdate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITriggerNode__factory {
  static readonly abi = _abi;
  static createInterface(): ITriggerNodeInterface {
    return new utils.Interface(_abi) as ITriggerNodeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITriggerNode {
    return new Contract(address, _abi, signerOrProvider) as ITriggerNode;
  }
}
