/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBehaviorGraph,
  IBehaviorGraphInterface,
} from "../../../contracts/Interfaces.sol/IBehaviorGraph";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_socketName",
        type: "uint8",
      },
    ],
    name: "getBoolInputVal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
    ],
    name: "getInputValueType",
    outputs: [
      {
        internalType: "enum ValueType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_socketName",
        type: "uint8",
      },
    ],
    name: "getIntInputVal",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "_stateVar",
        type: "string",
      },
    ],
    name: "getNodeStateVal",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_socketName",
        type: "uint8",
      },
    ],
    name: "getStringInputVal",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "string",
        name: "_stateVar",
        type: "string",
      },
      {
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "setNodeIntStateVal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_socketIndex",
        type: "uint8",
      },
    ],
    name: "triggerEdge",
    outputs: [
      {
        components: [
          {
            internalType: "enum UpdateType",
            name: "updateType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "variableId",
            type: "uint8",
          },
          {
            internalType: "int256",
            name: "intValue",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "boolValue",
            type: "bool",
          },
        ],
        internalType: "struct GraphUpdate[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_nodeId",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "_socketId",
        type: "uint8",
      },
      {
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "writeToOutput",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBehaviorGraph__factory {
  static readonly abi = _abi;
  static createInterface(): IBehaviorGraphInterface {
    return new utils.Interface(_abi) as IBehaviorGraphInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBehaviorGraph {
    return new Contract(address, _abi, signerOrProvider) as IBehaviorGraph;
  }
}
